{"version":3,"sources":["pages/other/MyOrders.js"],"names":["connect","state","currency","currencyData","user","userData","location","addToast","useToasts","pathname","useState","Myorders","setMyorders","Products","setProducts","userId","CUST_ID","useHistory","useEffect","a","axios","get","data","appearance","autoDismiss","name","content","to","process","headerTop","className","length","map","items","index","key","Date","Id","wallet","parseInt","Total","Product","single","finalProductPrice","finalDiscountedPrice","result","find","item","id","ProductID","offer","discountedPrice","price","discount","discountPrice","wholesaler","style","height","width","src","image","url","alt","color","size","type","value","quantity","readOnly","status","marginLeft","Address","Name","LastName","StreetAddress","State","TownCity","Pincode","Email","PhoneNumber","message"],"mappings":"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","file":"static/js/34.ee360a2e.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MyOrders = ({ location, user }) => {\r\n  const { addToast } = useToasts();\r\n  const { pathname } = location;\r\n  const [Myorders, setMyorders] = useState([]);\r\n  const [Products, setProducts] = useState([]);\r\n  const userId = user?.CUST_ID;\r\n  const history = useHistory();\r\n\r\n  // useEffect(() => {\r\n  //   if (!user) {\r\n  //     history.push(\"/\");\r\n  //   }\r\n  // }, []);\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        const { data } = await axios.get(`/api/user/get-my-orders/${userId}`);\r\n        setMyorders(data);\r\n      } catch (error) {\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        const { data } = await axios.get(\"/api/user/view-my-orders-products\");\r\n        setProducts(data);\r\n      } catch (error) {\r\n        addToast(\"Somthing Went Wrong\", {\r\n          appearance: \"success\",\r\n          autoDismiss: true,\r\n        });\r\n      }\r\n    })();\r\n  }, []);\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>MOFFA | MYORDERS</title>\r\n        <meta\r\n          name=\"description\"\r\n          content=\"Cart page of flone react minimalist eCommerce template.\"\r\n        />\r\n      </MetaTags>\r\n\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        MyOrders\r\n      </BreadcrumbsItem>\r\n\r\n      <LayoutOne headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"cart-main-area pt-90 pb-100\">\r\n          <div className=\"container\">\r\n            {Myorders && Myorders.length >= 1 && Products.length >=1 ? (\r\n              <Fragment>\r\n                {Myorders.map((items, index) => {\r\n                  return (\r\n                    <>\r\n                      <p className=\"cart-page-title mt-4\" key={index}>\r\n                        ORDER DATE:{items.Date}\r\n                        <br />\r\n                        ORDER ID:{items.Id}\r\n                        <br />\r\n                        {items.wallet ? <>AMOUNT :{parseInt(items?.Total)+parseInt(items.wallet)}</>:<>AMOUNT:{items.Total}</>}\r\n                      \r\n                        {items?.wallet && ( \r\n                          <p>WALLET APPLY AMOUNT:{items.wallet}</p> \r\n                        )}\r\n                      </p> \r\n                      <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                          <div className=\"table-content table-responsive cart-table-content\">\r\n                            <table>\r\n                              <thead>\r\n                                <tr>\r\n                                  <th>Image</th>\r\n                                  <th>Product Name</th>\r\n                                  <th>QTY</th>\r\n                                  <th>AMOUNT</th>\r\n                                  <th>TOTAL</th>\r\n                                  <th>STATUS</th>\r\n                                  {/* <th>action</th> */}\r\n                                </tr>\r\n                              </thead>\r\n                              {items?.Product.map((single, index) => {\r\n                                const result = Products.find(  \r\n                                  (item) => item.id === single.ProductID\r\n                                );\r\n                                var finalProductPrice;\r\n                                var finalDiscountedPrice;\r\n                                if (user.user == true) {\r\n                                  if (single?.offer) {\r\n                                    const discountedPrice =\r\n                                      (result?.price * single?.offer) / 100;\r\n                                    finalProductPrice = result?.price;\r\n                                    finalDiscountedPrice =\r\n                                      result?.price - discountedPrice;\r\n                                  } else if (result?.discount) {\r\n                                    const discountPrice =\r\n                                      (result?.price * result?.discount) / 100;\r\n                                    finalProductPrice = result?.price;\r\n                                    finalDiscountedPrice =\r\n                                      result?.price - discountPrice;\r\n                                  } else {\r\n                                    finalProductPrice = result?.price;\r\n                                  }\r\n                                } else {\r\n                                  finalProductPrice = result?.price;\r\n                                  finalDiscountedPrice = result?.wholesaler;\r\n                                }\r\n\r\n                                return (\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <td className=\"product-thumbnail\">\r\n                                        <img\r\n                                          style={{\r\n                                            height: \"150px\",\r\n                                            width: \"120px\",\r\n                                          }}\r\n                                          className=\"img-fluid\"\r\n                                          src={result?.image[0].url}\r\n                                          alt=\"\"\r\n                                        />\r\n                                      </td>\r\n\r\n                                      <td className=\"product-name\">\r\n                                        {result?.name}\r\n\r\n                                        <div className=\"cart-item-variation\">\r\n                                          <span>Color: {single?.color}</span>\r\n                                          <span>Size: {single?.size}</span>\r\n                                        </div>\r\n                                      </td>\r\n                                      <td className=\"product-price-cart\">\r\n                                        <input\r\n                                          className=\"cart-plus-minus-box\"\r\n                                          type=\"text\"\r\n                                          value={single?.quantity}\r\n                                          readOnly\r\n                                        />\r\n                                      </td>\r\n\r\n                                      <td className=\"product-price-cart\">\r\n                                        <Fragment>\r\n                                          <span className=\"amount old\">\r\n                                            {\"₹\" + finalProductPrice}\r\n                                          </span>\r\n                                          <span className=\"amount\">\r\n                                            {\"₹\" + finalDiscountedPrice}\r\n                                          </span>\r\n                                        </Fragment>\r\n                                      </td>\r\n\r\n                                      <td className=\"product-quantity\">\r\n                                        <span className=\"amount\">\r\n                                          {\"₹\" +\r\n                                            single.quantity *\r\n                                              finalDiscountedPrice}\r\n                                        </span>\r\n                                      </td>\r\n                                      {items.status == \"Pending\" ? (\r\n                                        <td>\r\n                                          <a className=\"text-danger\">\r\n                                            {items.status}\r\n                                          </a>\r\n                                        </td>\r\n                                      ) : (\r\n                                        <td>\r\n                                          <a className=\"text-success\">\r\n                                            {items.status}\r\n                                          </a>\r\n                                        </td>\r\n                                      )}\r\n                                      {/* <td>\r\n                                        <a className=\"text-danger\">Cancell</a>\r\n                                      </td> */}\r\n                                    </tr>\r\n                                  </tbody>\r\n                                );\r\n                              })}\r\n                              <div\r\n                                className=\"row\"\r\n                                style={{ marginLeft: \"1rem\" }}\r\n                              >\r\n                                <div className=\"col-6\">\r\n                                  <b>TO:</b>\r\n                                  <br />\r\n                                  <p>\r\n                                    {items.Address?.Name +\r\n                                      \",\" +\r\n                                      items.Address?.LastName}\r\n                                    ,<br />\r\n                                    {items.Address?.StreetAddress},\r\n                                    {items.Address.State},\r\n                                    {items.Address?.TownCity},\r\n                                    {items.Address?.Pincode},<br />\r\n                                    {items.Address?.Email},<br />\r\n                                    {items.Address?.PhoneNumber},<br />\r\n                                    {items.Address?.message && (\r\n                                      <b>{items.Address?.message}</b>\r\n                                    )}\r\n                                  </p>\r\n                                </div>\r\n                              </div>\r\n                            </table>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* <div className=\"row\">\r\n                        <div className=\"col-lg-12\">\r\n                          <div className=\"cart-shiping-update-wrapper\">\r\n                            <div className=\"cart-shiping-update\">\r\n                              <Link\r\n                                to={\r\n                                  process.env.PUBLIC_URL + \"/shop-grid-standard\"\r\n                                }\r\n                              >\r\n                                Continue Shopping\r\n                              </Link>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div> */}\r\n                    </>\r\n                  );\r\n                })}\r\n              </Fragment>\r\n            ) : (\r\n              <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                  <div className=\"item-empty-area text-center\">\r\n                    <div className=\"item-empty-area__icon mb-30\">\r\n                      <i className=\"pe-7s-cart\"></i>\r\n                    </div>\r\n                    <div className=\"item-empty-area__text\">\r\n                      No items found <br />{\" \"}\r\n                      <Link to={process.env.PUBLIC_URL + \"/shop-grid-standard\"}>\r\n                        Shop Now\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMyOrders.propTypes = {\r\n  location: PropTypes.object,\r\n  user: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currency: state.currencyData,\r\n    user: state.userData.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MyOrders);\r\n"],"sourceRoot":""}